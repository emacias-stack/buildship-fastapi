version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: buildship_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-buildship}
      POSTGRES_USER: ${POSTGRES_USER:-buildship_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-buildship_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-buildship_user} -d ${POSTGRES_DB:-buildship}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - buildship_network

  # Redis (optional, for caching)
  redis:
    image: redis:7-alpine
    container_name: buildship_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - buildship_network

  # FastAPI Application
  app:
    build: .
    container_name: buildship_app
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://${POSTGRES_USER:-buildship_user}:${POSTGRES_PASSWORD:-buildship_password}@postgres:5432/${POSTGRES_DB:-buildship}}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - buildship_network
    restart: unless-stopped

  # pgAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: buildship_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@buildship.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - buildship_network

volumes:
  postgres_data:
  redis_data:

networks:
  buildship_network:
    driver: bridge 